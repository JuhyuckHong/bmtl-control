/* === BMTL CONTROL DESIGN SYSTEM ===
 * Dieter Rams inspired design - Less but better
 */

/* === COLOR VARIABLES === */
/* Minimal color palette for clean interface */
:root {
    /* Grayscale palette */
    /* Base grays from light to dark */
    --gray-50: #fafafa;
    --gray-100: #f5f5f5;
    --gray-200: #eeeeee;
    --gray-300: #e0e0e0;
    --gray-400: #bdbdbd;
    --gray-500: #9e9e9e;
    --gray-600: #757575;
    --gray-700: #616161;
    --gray-800: #424242;
    --gray-900: #212121;

    /* Semantic colors */
    /* Core functional colors for UI states */
    --white: #ffffff;
    --black: #000000;
    --red: #d32f2f;
    --green: #388e3c;
    --blue: #1976d2;

    /* Light mode theme mapping */
    /* Maps semantic roles to specific colors */
    --bg-primary: var(--gray-50);
    --bg-secondary: var(--gray-100);
    --surface: var(--white);
    --border: var(--gray-300);
    --border-strong: var(--gray-400);
    --text-primary: var(--gray-900);
    --text-secondary: var(--gray-600);
    --text-tertiary: var(--gray-500);
    --success: var(--green);
    --error: var(--red);
    --info: var(--blue);
}

/* === DARK MODE THEME === */
/* Color overrides for dark theme */
.dark-mode {
    /* Dark mode color mapping */
    --bg-primary: var(--gray-900);
    --bg-secondary: var(--gray-800);
    --surface: var(--gray-800);
    --border: var(--gray-700);
    --border-strong: var(--gray-600);
    --text-primary: var(--gray-50);
    --text-secondary: var(--gray-400);
    --text-tertiary: var(--gray-500);
    --success: #4caf50;
    --error: #f44336;
    --info: #2196f3;
}

/* Application-specific base styles */
body {
    color: var(--text-primary);
    background: var(--bg-primary);
    /* GPU 가속을 위한 기본 설정 */
    will-change: auto;
    transform: translateZ(0);
}

/* === APP LAYOUT === */
/* Main application structure and layout */
.App {
    height: 100vh;
    background-color: var(--bg-primary);
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.app-header {
    background: var(--surface);
    color: var(--text-primary);
    padding: 1rem 2rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    border-bottom: 1px solid var(--border);
    flex-shrink: 0;
    gap: 1rem;
    flex-wrap: wrap;
}

.app-header > * {
    margin: 0;
}

.app-header .header-title {
    display: flex;
    align-items: center;
    gap: 1.5rem;
}

.app-header h1 {
    margin: 0;
    font-size: 1.25rem;
    font-weight: 500;
    letter-spacing: -0.025em;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    min-width: 0;
}

.app-header .status-summary {
    display: flex;
    gap: 1rem;
    align-items: center;
}

.app-header .status-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.875rem;
    color: var(--text-secondary);
}

.app-header .filter-controls,
.app-header .search-controls {
    display: flex;
    align-items: center;
    gap: 0.5rem;
}

.app-header .filter-controls label,
.app-header .search-controls label {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-secondary);
    white-space: nowrap;
}

.app-header .filter-controls select,
.app-header .search-controls input {
    padding: 0.5rem 0.75rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--bg-primary);
    color: var(--text-primary);
    font-size: 0.875rem;
    height: 38px;
    box-sizing: border-box;
}

/* ?�더??모든 버튼??공통 ?��????�용 */
.app-header .subscribe-btn-header,
.app-header .disconnect-btn-header {
    padding: 0.5rem 1rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--surface);
    color: var(--text-primary);
    font-size: 0.875rem;
    cursor: pointer;
    transition: background-color 0.15s ease-out;
    height: 38px;
    box-sizing: border-box;
    display: flex;
    align-items: center;
    white-space: nowrap;
}

.app-header .subscribe-btn-header:hover,
.app-header .disconnect-btn-header:hover {
    background: var(--bg-secondary);
}

.app-header .subscribe-btn-header:disabled,
.app-header .disconnect-btn-header:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.app-header .disconnect-btn-header {
    border-color: var(--error);
    color: var(--error);
    background: var(--surface);
}

.app-header .disconnect-btn-header:hover {
    background: rgba(239, 68, 68, 0.1);
}

.app-header .mqtt-header-controls {
    display: flex;
    gap: 1.5rem;
    align-items: center;
    flex-wrap: wrap;
}

.app-header .mqtt-quick-actions {
    display: flex;
    gap: 0.5rem;
    align-items: center;
}

.app-header .subscribe-input-header {
    padding: 0.5rem 0.75rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--bg-primary);
    color: var(--text-primary);
    font-size: 0.875rem;
    min-width: 200px;
    height: 38px;
    box-sizing: border-box;
}

.header-controls {
    display: flex;
    gap: 1.5rem;
    align-items: center;
    flex-shrink: 0;
}

.toggle-btn {
    background: var(--surface);
    color: var(--text-primary);
    border: 1px solid var(--border-strong);
    padding: 0;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    width: 38px;
    height: 38px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.1s ease;
    flex-shrink: 0;
}

.toggle-btn:hover {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.toggle-btn:active {
    background: var(--border);
}

.dark-mode-toggle {
    background: var(--surface);
    color: var(--text-primary);
    border: 1px solid var(--border-strong);
    padding: 0;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1rem;
    width: 38px;
    height: 38px;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.1s ease;
    flex-shrink: 0;
}

.dark-mode-toggle:hover {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.dark-mode-toggle:active {
    background: var(--border);
}

.app-main {
    flex: 1;
    padding: 2rem;
    overflow: hidden;
    background-color: var(--bg-primary);
    display: flex;
    flex-direction: column;
    min-height: 0;
}

/* === MQTT PAGE === */
/* MQTT connection and messaging interface */
.mqtt-page {
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.mqtt-login-container {
    flex: 1;
    display: flex;
    align-items: center;
    justify-content: center;
    padding: 2rem;
}

.mqtt-login-container .login-form {
    background: var(--surface);
    border: 1px solid var(--border);
    padding: 2rem;
    max-width: 400px;
    width: 100%;
}

.mqtt-connected-layout {
    display: flex;
    flex-direction: column;
    height: 100%;
    gap: 0;
    overflow: hidden;
    min-height: 0;
}

@media (min-width: 1200px) {
    .mqtt-connected-layout {
        flex-direction: row;
        gap: 1.5rem;
    }

    .mqtt-publish-panel {
        flex: 0 0 400px;
        margin-bottom: 0;
        margin-right: 0;
    }

    .mqtt-messages-panel {
        flex: 1;
    }
}

.mqtt-publish-panel {
    background: var(--surface);
    border: 1px solid var(--border);
    padding: 1.5rem;
    margin-bottom: 1.5rem;
    flex-shrink: 0;
}

.mqtt-messages-panel {
    flex: 1;
    background: var(--surface);
    border: 1px solid var(--border);
    padding: 1.5rem;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    min-height: 0;
}

.publish-form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
}

.publish-row {
    display: flex;
    gap: 1rem;
    align-items: flex-start;
}

.topic-input {
    flex: 1;
    padding: 0.75rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--bg-primary);
    color: var(--text-primary);
    font-size: 0.875rem;
}

.qos-select {
    padding: 0.75rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--bg-primary);
    color: var(--text-primary);
    font-size: 0.875rem;
    min-width: 100px;
}

.payload-input {
    flex: 1;
    padding: 0.75rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--bg-primary);
    color: var(--text-primary);
    font-size: 0.875rem;
    resize: vertical;
    min-height: 80px;
}

.publish-btn {
    padding: 0.75rem 1.5rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--primary);
    color: white;
    font-size: 0.875rem;
    cursor: pointer;
    transition: background-color 0.15s ease-out;
    white-space: nowrap;
    align-self: flex-start;
}

.publish-btn:hover {
    background: var(--primary-dark);
}

.publish-btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
    background: var(--surface);
    color: var(--text-secondary);
}

.subscribed-topics {
    margin-top: 1rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border);
}

.topics-header {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-secondary);
    margin-bottom: 0.5rem;
}

.topics-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
}

.topic-tag {
    padding: 0.25rem 0.75rem;
    background: var(--bg-secondary);
    border: 1px solid var(--border);
    border-radius: 20px;
    font-size: 0.75rem;
    color: var(--text-secondary);
}

/* === LOGIN FORM === */
/* Connection form styles */
.login-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.login-form h2 {
    margin: 0 0 0 0;
    font-size: 1.125rem;
    font-weight: 1500;
    color: var(--text-primary);
}

.login-actions {
    display: flex;
    align-items: center;
    gap: 1rem;
    margin-top: 1rem;
}

.error-message {
    color: var(--error);
    font-size: 0.85rem;
    font-weight: 500;
    margin: 0;
}

.form-group {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
    margin: 1rem 0 0 0;
}

.form-group label {
    font-size: 0.875rem;
    font-weight: 500;
    color: var(--text-secondary);
    white-space: nowrap;
}

/* Base form input styles */
.form-group input,
.form-group textarea,
.form-group select {
    padding: 0.875rem;
    border: 1px solid var(--border-strong);
    border-radius: 4px;
    background: var(--surface);
    font-size: 0.875rem;
    font-family: inherit;
    color: var(--text-primary);
    transition: border-color 0.1s ease;
    box-sizing: border-box;
}

.form-group input:focus,
.form-group textarea:focus,
.form-group select:focus {
    outline: none;
    border-color: var(--text-primary);
}

.form-group input:disabled,
.form-group textarea:disabled,
.form-group select:disabled {
    background-color: var(--bg-secondary);
    color: var(--text-tertiary);
    cursor: not-allowed;
}

/* === BUTTONS === */
/* Consistent button styling across the app */

/* Base button reset */
button {
    font-family: inherit;
    cursor: pointer;
    transition: all 0.1s ease;
    border: none;
    background: none;
    padding: 0;
}

/* Primary button styles */
.btn,
.connect-btn,
.disconnect-btn,
.publish-btn,
.subscribe-btn {
    background: var(--gray-600);
    color: var(--white);
    border: 1px solid var(--gray-600);
    padding: 0.875rem 1.5rem;
    font-size: 0.875rem;
    font-weight: 500;
    white-space: nowrap;
    border-radius: 4px;
    cursor: pointer;
    transition: all 0.1s ease;
}

.btn:hover,
.connect-btn:hover,
.disconnect-btn:hover,
.publish-btn:hover,
.subscribe-btn:hover {
    background: var(--gray-700);
    border-color: var(--gray-700);
}

.btn:disabled,
.connect-btn:disabled,
.disconnect-btn:disabled,
.publish-btn:disabled,
.subscribe-btn:disabled {
    background: var(--bg-secondary);
    color: var(--text-tertiary);
    border-color: var(--border);
    cursor: not-allowed;
    opacity: 0.6;
}

/* === COMPACT COMMAND PANEL === */
/* Streamlined MQTT control interface */
.command-panel.disabled {
    text-align: center;
    color: var(--text-tertiary);
    padding: 2rem;
    background: var(--bg-secondary);
    border: 1px solid var(--border);
}

.command-panel.compact {
    display: flex;
    flex-direction: column;
    gap: 2rem;
    height: 100%;
}

.panel-header-compact {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1.25rem 1.5rem;
    background: var(--surface);
    border: 1px solid var(--border-strong);
    margin-bottom: 0.5rem;
    gap: 1.5rem;
    flex-wrap: nowrap;
}

.panel-header-compact h2 {
    margin: 0;
    font-size: 1rem;
    font-weight: 500;
    color: var(--text-primary);
    white-space: nowrap;
    flex-shrink: 0;
}

.disconnect-btn-compact {
    background: var(--surface);
    color: var(--text-primary);
    border: 1px solid var(--border-strong);
    padding: 0.6rem 1rem;
    font-size: 0.8rem;
    font-weight: 500;
    white-space: nowrap;
    flex-shrink: 0;
}

.disconnect-btn-compact:hover {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.quick-actions,
.subscribe-section {
    background: var(--surface);
    border: 1px solid var(--border);
    padding: 1.5rem;
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
}

.subscribe-section {
    flex: 1;
    min-height: 0;
}

.action-row,
.subscribe-row {
    display: flex;
    gap: 1.5rem;
    align-items: flex-start;
    flex-wrap: nowrap;
}

.topic-input,
.subscribe-input,
.payload-input {
    flex: 1;
    padding: 0.875rem;
    border: 1px solid var(--border-strong);
    background: var(--surface);
    font-size: 0.875rem;
    color: var(--text-primary);
    min-width: 0;
}

.payload-input {
    font-family: ui-monospace, "SFMono-Regular", "Consolas", monospace;
    resize: vertical;
}

.topic-input:focus,
.subscribe-input:focus,
.payload-input:focus {
    outline: none;
    border-color: var(--text-primary);
}

.qos-select {
    flex: 0 0 90px;
    padding: 0.875rem;
    border: 1px solid var(--border-strong);
    background: var(--surface);
    font-size: 0.875rem;
    color: var(--text-primary);
    white-space: nowrap;
}

.publish-btn-compact,
.subscribe-btn-compact {
    flex: 0 0 90px;
    background: var(--text-primary);
    color: var(--surface);
    border: 1px solid var(--text-primary);
    padding: 0.875rem;
    font-size: 0.8rem;
    font-weight: 500;
    height: fit-content;
    white-space: nowrap;
}

.publish-btn-compact:hover:not(:disabled),
.subscribe-btn-compact:hover:not(:disabled) {
    background: var(--text-secondary);
    border-color: var(--text-secondary);
}

.publish-btn-compact:disabled,
.subscribe-btn-compact:disabled {
    background: var(--bg-secondary);
    color: var(--text-tertiary);
    border-color: var(--border);
}

.topics-compact {
    margin-top: 1rem;
    max-height: 200px;
    overflow-y: auto;
}

.topics-header {
    font-size: 0.8rem;
    font-weight: 500;
    color: var(--text-secondary);
    margin-bottom: 1rem;
    padding-bottom: 0.5rem;
    border-bottom: 1px solid var(--border);
    white-space: nowrap;
}

.topics-list {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
}

.topic-tag {
    background: var(--bg-secondary);
    color: var(--text-primary);
    padding: 0.6rem 0.875rem;
    border: 1px solid var(--border);
    font-size: 0.75rem;
    font-weight: 500;
    white-space: nowrap;
}

.topic-tag:hover {
    background: var(--border);
}

/* === MESSAGE LOG === */
/* MQTT message display and formatting */
.message-log {
    height: 100%;
    display: flex;
    flex-direction: column;
}

.log-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 1rem;
    padding-bottom: 1rem;
    border-bottom: 1px solid var(--border);
    gap: 1.5rem;
    flex-wrap: nowrap;
}

.log-header h3 {
    margin: 0;
    font-size: 1rem;
    font-weight: 500;
    color: var(--text-primary);
    white-space: nowrap;
    flex-shrink: 0;
}

.messages-container {
    flex: 1;
    overflow-y: auto;
    border: 1px solid var(--border);
    padding: 1rem;
    min-height: 0;
}

.message {
    margin-bottom: 1rem;
    padding: 0.875rem;
    border: 1px solid var(--border);
    background: var(--surface);
}

.message-sent {
    border-left: 3px solid var(--success);
}

.message-received {
    border-left: 3px solid var(--info);
}

.message-system {
    border-left: 3px solid var(--error);
}

.message-header {
    display: flex;
    gap: 1.5rem;
    margin-bottom: 0.5rem;
    font-size: 0.8rem;
    color: var(--text-secondary);
    flex-wrap: wrap;
}

.message-time {
    font-weight: 500;
    white-space: nowrap;
}

.message-topic {
    color: var(--info);
    font-weight: 500;
    word-break: break-all;
}

.message-type {
    text-transform: uppercase;
    font-size: 0.7rem;
    background: var(--bg-secondary);
    padding: 0.2rem 0.4rem;
    border: 1px solid var(--border);
    white-space: nowrap;
}

.message-payload {
    font-family: ui-monospace, "SFMono-Regular", "Consolas", monospace;
    font-size: 0.875rem;
    background: var(--bg-secondary);
    padding: 0.75rem;
    border: 1px solid var(--border);
    word-break: break-all;
}

.no-messages {
    text-align: center;
    color: var(--text-tertiary);
    font-style: italic;
    padding: 2rem;
}

/* === MODULE CONTROL === */
/* Camera module management interface */

/* Base font size for entire module control panel */
.modules-table,
.modules-container-scrollable {
    font-size: 0.8rem;
}
.module-control {
    height: 100%;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}

.connection-warning {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    text-align: center;
    padding: 3rem;
    color: var(--text-secondary);
}

.connection-warning h2 {
    margin: 0 0 1rem 0;
    color: var(--text-primary);
}

.connection-warning p {
    margin: 0;
}

.monitor-header-combined {
    background: var(--surface);
    border: 1px solid var(--border);
    padding: 1.25rem;
    margin-bottom: 1.5rem;
    display: flex;
    justify-content: space-between;
    align-items: center;
    gap: 2rem;
    flex-shrink: 0;
    flex-wrap: wrap;
}

.monitor-header-combined h1 {
    margin: 0;
    color: var(--text-primary);
    font-size: 1.125rem;
    font-weight: 500;
    white-space: nowrap;
}

.modules-container-scrollable {
    background: var(--surface);
    border: 1px solid var(--border);
    flex: 1;
    min-height: 0;
    display: flex;
    flex-direction: column;
    overflow: auto;
}

.modules-table {
    background: var(--surface);
    border: 1px solid var(--border);
    flex: 1;
    min-height: 0;
    display: flex;
    flex-direction: column;
    overflow: hidden;
    position: relative;
}

.modules-table-scroll-container {
    flex: 1;
    overflow-x: auto;
    overflow-y: auto;
}

.modules-table-content {
    display: flex;
    flex-direction: column;
    width: 100%;
}

.modules-table-header,
.camera-module-row {
    display: grid;
    grid-template-columns:
        minmax(25px, 1fr) /* 모듈 */
        minmax(25px, 0.4fr) /* 상태 */
        minmax(80px, 1.5fr) /* 현장 이름 */
        minmax(55px, 1fr) /* 저장공간 */
        minmax(55px, 1fr) /* 온도 */
        minmax(75px, 1.4fr) /* 촬영 현황 */
        minmax(80px, 1.5fr) /* 마지막 촬영 */
        minmax(80px, 1.5fr) /* 마지막 부팅 */
        minmax(80px, 1.3fr) /* 모듈 제어 */
        minmax(80px, 1.3fr) /* 소프트웨어 */
        minmax(90px, 1.5fr) /* 운영 시간 */
        minmax(100px, 2fr) /* 카메라 설정 */
        minmax(80px, 1.5fr); /* 설정 관리 */
    gap: 0.5rem;
    padding: 0.375rem;
    border-bottom: 1px solid var(--border);
    align-items: center;
    min-height: 38px;
    white-space: normal;
    flex-shrink: 0;
    text-align: center;
    justify-content: space-evenly;
}

.modules-table-header .table-header {
    white-space: normal;
    line-height: 1.2;
    padding: 0 0.25rem;
}

.modules-table-scrollable > *,
.camera-module-scrollable > * {
    white-space: normal;
}

.camera-module-row select,
.camera-module-row input:not(.interval-input) {
    padding: 0.2rem 0.4rem;
    min-width: 70px;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--surface);
    color: var(--text-primary);
    font-size: 0.8rem;
    font-family: inherit;
    cursor: pointer;
    transition: all 0.1s ease;
    text-align: center;
}

/* === CAMERA MODULE ROW COMPONENTS === */
.capacity-container {
    display: flex;
    justify-content: center;
    align-items: center;
}

.capacity-progress {
    position: relative;
    width: 100%;
    height: 16px;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--bg-secondary);
    overflow: hidden;
}

.capacity-progress.warning {
    border-color: var(--error);
}

.capacity-progress-bar {
    height: 100%;
    background: var(--info);
    transition: width 0.25s ease;
}

.capacity-progress.warning .capacity-progress-bar {
    background: var(--error);
}

.capacity-donut {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 50px;
    height: 50px;
}

.donut-chart {
    position: absolute;
    top: 0;
    left: 0;
}

.donut-chart circle {
    transition: stroke-dasharray 0.25s ease;
}

.donut-text {
    position: absolute;
    font-size: 0.6rem;
    font-weight: 600;
    color: var(--text-primary);
    text-align: center;
    line-height: 1;
}

.capacity-text {
    position: absolute;
    inset: 0;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 0.7rem;
    color: var(--text-primary);
    font-weight: 500;
}

.temperature {
    font-size: 0.75rem;
    color: var(--text-secondary);
    text-align: center;
}

.temperature.warning {
    color: var(--error);
    font-weight: 600;
}

.module-id {
    font-weight: 600;
    color: var(--text-primary);
    font-size: 0.8rem;
}

.control-buttons {
    display: flex;
    flex-direction: column;
    gap: 2px;
    align-items: stretch;
}

.control-buttons .btn,
.control-buttons button {
    padding: 2px 4px;
    font-size: 0.7rem;
    min-height: 16px;
    border: 1px solid var(--border);
    border-radius: 3px;
    background: var(--surface);
    color: var(--text-primary);
    cursor: pointer;
    transition: all 0.1s ease;
    width: 100%;
    text-align: center;
}

.control-buttons .btn:hover:not(:disabled),
.control-buttons button:hover:not(:disabled) {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.control-buttons .btn:disabled,
.control-buttons button:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

.sw-stack {
    display: flex;
    flex-direction: column;
    gap: 1px;
    align-items: stretch;
}
/* Match SW update button typography with other controls */
.sw-stack .btn {
    font-size: 0.7rem;
    padding: 2px 4px;
}

.sw-version {
    font-size: 0.7rem;
    color: var(--text-secondary);
    text-align: center;
}

.settings-stack {
    display: flex;
    flex-direction: column;
    gap: 1px;
    align-items: stretch;
}

.settings-stack-inner {
    display: flex;
    flex-direction: column;
    gap: 1px;
}

.settings-stack .btn {
    padding: 1px 3px;
    font-size: 0.65rem;
    min-height: 14px;
    border: 1px solid var(--border);
    border-radius: 2px;
    background: var(--surface);
    color: var(--text-primary);
    cursor: pointer;
    transition: all 0.1s ease;
}

.settings-stack .btn:hover:not(:disabled) {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.settings-stack .btn:disabled {
    opacity: 0.5;
    cursor: not-allowed;
}

/* === DEVICE INFO STACK === */
/* Compact layout for device status information */

.device-info-stack {
    display: flex;
    flex-direction: column;
    gap: 1px;
    align-items: stretch;
}

.device-info-item {
    display: flex;
    flex-direction: row;
    gap: 2px;
    align-items: center;
    justify-content: flex-start;
}

.device-info-item .capacity-progress {
    flex: 1;
    min-width: 0;
}

.cpu-temperature {
    font-weight: 500;
    color: var(--text-primary);
    font-size: 0.75em;
}

.cpu-temperature.hot {
    color: var(--error);
    font-weight: 600;
}

/* === CAPTURE INFO STACK === */
/* Compact layout for capture progress information */

.capture-info-stack {
    display: flex;
    flex-direction: column;
    gap: 1px;
    align-items: center;
}

.capture-info-item {
    display: flex;
    flex-direction: row;
    gap: 2px;
    align-items: center;
    justify-content: center;
}

/* 카메라 상태 아이템은 세로 배치 */
.capture-info-item.camera-status-item {
    flex-direction: column;
    align-items: stretch;
    gap: 0;
}

.info-label {
    font-weight: 100;
    color: var(--text-secondary);
    font-size: 0.7em;
    white-space: nowrap;
    min-width: 20px;
}

/* === SETTING GROUPS === */
/* Common styling for labeled setting groups */

.setting-group {
    display: flex;
    flex-direction: row;
    gap: 3px;
    align-items: center;
}

.setting-label {
    font-weight: 100;
    color: var(--text-secondary);
    font-size: 0.7em;
    line-height: 1;
    white-space: nowrap;
    flex-shrink: 0;
    min-width: 25px;
}

.setting-group > select,
.setting-group > .interval-container {
    flex: 1;
    min-width: 0;
}

.setting-group > select {
    padding: 0.25rem 0.5rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--surface);
    color: var(--text-primary);
    font-size: inherit;
    font-family: inherit;
    cursor: pointer;
    transition: all 0.1s ease;
    text-align: center;
    text-align-last: center;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: none;
}

.setting-group > select:hover {
    border-color: var(--text-secondary);
    background-color: var(--bg-secondary);
}

.setting-group > select:focus {
    outline: none;
    border-color: var(--text-primary);
    background-color: var(--bg-secondary);
}

.setting-group > select:disabled {
    background-color: var(--bg-secondary);
    color: var(--text-tertiary);
    cursor: not-allowed;
    opacity: 0.6;
}

/* === TIME SETTINGS STACK === */
/* Compact layout for time configuration settings */

.time-settings-stack {
    display: flex;
    flex-direction: column;
    gap: 1px;
    min-width: 0;
    font-size: 0.8em;
    line-height: 1.2;
}

.time-settings-stack .interval-container {
    width: 100%;
}

/* === CAMERA SETTINGS STACK === */
/* Compact layout for camera configuration settings */

.camera-settings-stack {
    display: flex;
    flex-direction: column;
    gap: 1px;
    min-width: 0;
    font-size: 0.8em;
    line-height: 1.2;
}

.camera-settings-stack > select {
    width: 100%;
    min-width: 0;
}

.camera-settings-stack select,
.time-settings-stack select {
    padding: 0.1rem 0.3rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--surface);
    color: var(--text-primary);
    font-size: 0.9em;
    font-family: inherit;
    cursor: pointer;
    transition: all 0.1s ease;
    text-align: center;
    text-align-last: center;
    appearance: none;
    -webkit-appearance: none;
    -moz-appearance: none;
    background-image: none;
    min-height: 18px;
    line-height: 1.1;
}
.time-settings-stack .setting-group,
.camera-settings-stack .setting-group {
    gap: 1px;
    min-height: 20px;
    align-items: center;
}

.camera-settings-stack select:hover,
.time-settings-stack select:hover {
    border-color: var(--text-secondary);
    background-color: var(--bg-secondary);
}

.camera-settings-stack select:focus,
.time-settings-stack select:focus {
    outline: none;
    border-color: var(--text-primary);
    background-color: var(--bg-secondary);
}

.camera-settings-stack select:disabled,
.time-settings-stack select:disabled {
    background-color: var(--bg-secondary);
    color: var(--text-tertiary);
    cursor: not-allowed;
    opacity: 0.6;
}

/* Time picker container */
.time-picker {
    display: flex;
    gap: 2px;
    align-items: center;
}

.camera-module-row .time-select {
    flex: 1;
    min-width: 30px !important;
    max-width: 40px;
    padding: 0.1rem 0.1rem;
    font-size: 0.6rem;
    font-weight: 500;
    color: var(--text-primary);
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: 2px;
    cursor: pointer;
    transition: all 0.1s ease;
    text-align: center;
    text-align-last: center;
}

.camera-module-row .time-select:hover:not(:disabled) {
    border-color: var(--text-secondary);
    background-color: var(--bg-secondary);
}

.camera-module-row .time-select:focus {
    outline: none;
    border-color: var(--text-primary);
    background-color: var(--bg-secondary);
}

.camera-module-row .time-select:disabled {
    background-color: var(--bg-secondary);
    color: var(--text-tertiary);
    cursor: not-allowed;
    opacity: 0.6;
}

.camera-settings-row {
    display: flex;
    flex-direction: column;
    gap: 2px;
}

.camera-settings-row > select {
    width: 100%;
    min-width: 0;
}

.modules-table-header {
    background: var(--bg-secondary);
    font-weight: 500;
    color: var(--text-secondary);
    position: sticky;
    top: 0;
    z-index: 10;
}

.camera-module-row:hover {
    background: var(--bg-secondary);
}

.time-input {
    padding: 0.2rem 0.3rem;
    border: 1px solid var(--border);
    border-radius: 2px;
    background: var(--surface);
    color: var(--text-primary);
    width: 100%;
    text-align: center;
    min-height: 20px;
    box-sizing: border-box;
}

.time-input:focus {
    outline: none;
    border-color: var(--text-primary);
}

.time-input:disabled {
    background-color: var(--bg-secondary);
    color: var(--text-tertiary);
    cursor: not-allowed;
}

.last-capture,
.last-boot {
    white-space: pre-line;
    text-align: center;
    line-height: 1.2;
    word-break: keep-all;
    overflow-wrap: normal;
}

.time-display-container {
    position: relative;
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
}

.time-display {
    font-weight: 500;
    color: var(--text-primary);
    background: var(--surface);
    padding: 0.15rem 0.3rem;
    border-radius: 2px;
    border: 1px solid var(--border);
    width: 100%;
    text-align: center;
    cursor: pointer;
    user-select: none;
    min-height: 20px;
    box-sizing: border-box;
}

.time-display:hover {
    background: var(--bg-secondary);
}

.time-picker {
    display: flex;
    gap: 2px;
    align-items: center;
}

.time-display-container:hover .time-display {
    border-color: var(--text-primary);
}

.time-picker:disabled + .time-display,
.time-display-container:has(.time-picker:disabled) .time-display {
    background-color: var(--bg-secondary);
    color: var(--text-tertiary);
    cursor: not-allowed;
}

.time-display-container:has(.time-picker:disabled):hover .time-display {
    border-color: var(--border);
}

.time-button {
    font-weight: 500;
    color: var(--text-primary);
    background: var(--surface);
    padding: 0.15rem 0.3rem;
    border-radius: 2px;
    border: 1px solid var(--border);
    width: 100%;
    text-align: center;
    cursor: pointer;
    transition: all 0.2s ease;
    min-height: 20px;
    box-sizing: border-box;
}

.time-button:hover {
    background: var(--bg-secondary);
    border-color: var(--text-primary);
}

.time-button:disabled {
    background-color: var(--bg-secondary);
    color: var(--text-tertiary);
    cursor: not-allowed;
    border-color: var(--border);
}

.time-button:disabled:hover {
    background-color: var(--bg-secondary);
    border-color: var(--border);
}

.time-select-container {
    position: relative;
    width: 100%;
}

.time-select-container .time-display {
    font-weight: 500;
    color: var(--text-primary);
    background: var(--surface);
    padding: 0.15rem 0.3rem;
    border-radius: 2px;
    border: 1px solid var(--border);
    width: 100%;
    text-align: center;
    cursor: pointer;
    user-select: none;
    pointer-events: none;
    min-height: 20px;
    box-sizing: border-box;
}

.time-select-container:hover .time-display {
    background: var(--bg-secondary);
    border-color: var(--text-primary);
}

.interval-container {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 2px;
    width: 100%;
}

.interval-input {
    width: 40px;
    padding: 0.15rem 0.1rem;
    border: 1px solid var(--border);
    border-radius: 2px;
    background: var(--surface);
    color: var(--text-primary);
    font-size: 0.8rem;
    font-family: inherit;
    text-align: center;
    min-height: 18px;
    box-sizing: border-box;
}

.interval-input:focus {
    outline: none;
    border-color: var(--text-primary);
}

.interval-input:disabled {
    background-color: var(--bg-secondary);
    color: var(--text-tertiary);
    cursor: not-allowed;
}

.interval-unit {
    color: var(--text-secondary);
    font-size: 0.75em;
}

.time-unit {
    color: var(--text-secondary);
    font-size: 0.9em;
}

.time-select-container {
    display: flex;
    align-items: center;
    gap: 2px;
    width: 100%;
}

.time-select {
    padding: 0.1rem 0.3rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--surface);
    color: var(--text-primary);
    font-size: 0.9em;
    font-family: inherit;
    cursor: pointer;
    transition: all 0.1s ease;
    text-align: center;
    width: 100%;
    min-width: 0;
}

.time-select:hover {
    border-color: var(--text-secondary);
    background-color: var(--bg-secondary);
}

.time-select:focus {
    outline: none;
    border-color: var(--text-primary);
    background-color: var(--bg-secondary);
}

.time-select:disabled {
    background-color: var(--bg-secondary);
    color: var(--text-tertiary);
    cursor: not-allowed;
    opacity: 0.6;
}

.no-modules {
    display: flex;
    justify-content: center;
    align-items: center;
    padding: 3rem;
    color: var(--text-secondary);
}

.no-modules p {
    margin: 0;
}

.status-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    margin: 0 auto;
    /* GPU 가속 적용 - 상태 변경이 빈번함 */
    will-change: background-color;
    transform: translateZ(0);
}

.status-online {
    background-color: var(--success);
}

.status-offline {
    background-color: var(--error);
}

.status-unknown {
    background-color: var(--text-tertiary);
}

/* === PLACEHOLDER STATES === */
/* Empty states and loading screens */
.main-placeholder {
    display: flex;
    align-items: center;
    justify-content: center;
    flex: 1;
    text-align: center;
}

.placeholder-content {
    background: var(--surface);
    padding: 3rem;
    border: 1px solid var(--border);
    max-width: 400px;
    text-align: center;
}

.placeholder-content h2 {
    color: var(--text-primary);
    margin-bottom: 1rem;
    font-weight: 500;
    white-space: nowrap;
}

.placeholder-content p {
    color: var(--text-secondary);
    font-size: 1rem;
    margin: 0 0 2rem 0;
    line-height: 1.5;
}

.placeholder-content .connect-btn {
    background: var(--text-primary);
    color: var(--surface);
    border: 1px solid var(--text-primary);
    padding: 1rem 2rem;
    font-size: 0.875rem;
    font-weight: 500;
    white-space: nowrap;
}

.placeholder-content .connect-btn:hover {
    background: var(--text-secondary);
    border-color: var(--text-secondary);
}

/* === GLOBAL CONTROLS === */
/* Universal control elements */
.global-controls {
    display: flex;
    gap: 1rem;
    flex-wrap: wrap;
}

.global-btn {
    background: var(--surface);
    color: var(--text-primary);
    border: 1px solid var(--border-strong);
    padding: 0.6rem 1rem;
    margin: 1rem 0rem;
    font-size: 0.85rem;
    font-weight: 500;
    cursor: pointer;
    transition: all 0.1s ease;
    white-space: nowrap;
}

.global-btn:hover {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.global-btn.danger {
    background: var(--error);
    color: var(--surface);
    border-color: var(--error);
}

.global-btn.danger:hover {
    background: var(--text-secondary);
}

/* === RESPONSIVE DESIGN === */
/* Mobile and tablet adaptations */
@media (max-width: 768px) {
    .app-header {
        padding: 1rem;
        gap: 1rem;
    }

    .app-header h1 {
        font-size: 1rem;
    }

    .toggle-btn {
        width: 34px;
        height: 34px;
        font-size: 0.9rem;
    }

    .header-controls {
        gap: 1rem;
    }

    .app-main {
        padding: 1rem;
    }

    .mqtt-connected-layout {
        flex-direction: column;
        gap: 1rem;
    }

    .placeholder-content {
        padding: 2rem;
        margin: 1rem;
    }

    .action-row,
    .subscribe-row {
        gap: 1rem;
    }

    .panel-header-compact {
        gap: 1rem;
        flex-wrap: wrap;
    }

    .monitor-header-combined {
        gap: 1rem;
    }
}

/* === MODAL COMPONENTS === */
/* Dialog and popup interfaces */
.modal-overlay {
    position: fixed;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(0, 0, 0, 0.5);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
}

.modal-content {
    background: var(--surface);
    border-radius: 8px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.2);
    width: 90%;
    max-width: 450px;
    border: 1px solid var(--border);
}

.modal-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    padding: 1rem 1.5rem;
    border-bottom: 1px solid var(--border);
}

.modal-header h3 {
    margin: 0;
    color: var(--text-primary);
    font-size: 1.1rem;
}

.modal-close-btn {
    background: none;
    border: none;
    font-size: 1.5rem;
    cursor: pointer;
    color: var(--text-secondary);
    padding: 0;
    width: 30px;
    height: 30px;
    display: flex;
    align-items: center;
    justify-content: center;
    border-radius: 4px;
}

.modal-close-btn:hover {
    background: var(--bg-secondary);
    color: var(--text-primary);
}

.modal-body {
    padding: 1.5rem;
}

.form-group {
    margin-bottom: 1rem;
}

.form-group label {
    display: block;
    margin-bottom: 0.5rem;
    font-weight: 600;
    color: var(--text-primary);
}

.form-group input {
    width: 100%;
    padding: 0.75rem;
    border: 1px solid var(--border);
    border-radius: 4px;
    background: var(--bg-primary);
    color: var(--text-primary);
    font-size: 0.9rem;
    box-sizing: border-box;
}

.form-group input:focus {
    outline: none;
    border-color: var(--info);
    box-shadow: 0 0 0 2px rgba(25, 118, 210, 0.1);
}

.form-group input.error {
    border-color: var(--error);
    box-shadow: 0 0 0 2px rgba(244, 67, 54, 0.1);
}

.input-guidelines {
    margin: 0.75rem 0;
    padding: 0.75rem;
    background: var(--bg-secondary);
    border-radius: 4px;
    border-left: 3px solid var(--info);
}

.input-guidelines strong {
    color: var(--text-primary);
    font-size: 0.85rem;
}

.input-guidelines ul {
    margin: 0.5rem 0 0 0;
    padding-left: 1.2rem;
}

.input-guidelines li {
    font-size: 0.8rem;
    color: var(--text-secondary);
    margin-bottom: 0.25rem;
}

.error-message {
    background: #ffebee;
    color: var(--error);
    padding: 0.5rem;
    border-radius: 4px;
    border-left: 3px solid var(--error);
    font-size: 0.85rem;
    margin-top: 0.5rem;
}

.dark-mode .error-message {
    background: rgba(244, 67, 54, 0.1);
}

.dark-mode .input-guidelines {
    background: var(--bg-primary);
}

.help-text {
    display: block;
    margin-top: 0.25rem;
    font-size: 0.8rem;
    color: var(--text-secondary);
}

.modal-actions {
    display: flex;
    gap: 0.75rem;
    justify-content: flex-end;
    margin-top: 1.5rem;
}

.btn-cancel {
    background: var(--bg-secondary);
    color: var(--text-primary);
    border: 1px solid var(--border);
}

.btn-cancel:hover {
    background: var(--border);
}

.btn-primary {
    background: var(--info);
    color: white;
    border: 1px solid var(--info);
}

.btn-primary:hover:not(:disabled) {
    background: #1565c0;
    border-color: #1565c0;
}

.btn-primary:disabled {
    background: var(--text-tertiary);
    border-color: var(--text-tertiary);
    cursor: not-allowed;
}

/* Clickable site name */
.site-name.clickable {
    cursor: pointer;
    text-decoration: underline;
    text-decoration-style: dotted;
    text-underline-offset: 2px;
}

.site-name.clickable:hover {
    color: var(--info);
    text-decoration-style: solid;
}

/* SW Version Display */
.sw-version {
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 500;
    color: var(--text-primary);
    background: var(--bg-secondary);
    padding: 0.15rem;
    border-radius: 3px;
    min-height: 20px;
    text-align: center;
}

/* SW Update Button - Control Panel Size */
.control-buttons .btn.sw-update {
    background: var(--surface);
    color: var(--text-primary);
    border: 1px solid var(--border);
    min-width: 45px;
    padding: 0.15rem 0.2rem;
}

.control-buttons .btn.sw-update:hover:not(:disabled) {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.control-buttons .btn.sw-update:disabled {
    background: var(--text-tertiary);
    border-color: var(--text-tertiary);
    color: var(--bg-primary);
    opacity: 0.6;
}

/* Regular SW Update Button (non-control panel) */
.btn.sw-update:not(.control-buttons .btn) {
    background: var(--surface);
    color: var(--text-primary);
    border: 1px solid var(--border);
    min-width: 45px;
}

.btn.sw-update:not(.control-buttons .btn):hover:not(:disabled) {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.btn.sw-update:not(.control-buttons .btn):disabled {
    background: var(--text-tertiary);
    border-color: var(--text-tertiary);
    color: var(--bg-primary);
}

/* SW Rollback Button */
.btn.sw-rollback {
    background: var(--surface);
    color: var(--text-primary);
    border: 1px solid var(--border);
    min-width: 45px;
}

.btn.sw-rollback:hover:not(:disabled) {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.btn.sw-rollback:disabled {
    background: var(--text-tertiary);
    border-color: var(--text-tertiary);
    color: var(--bg-primary);
    opacity: 0.6;
}

/* SW Version Refresh Button */
.btn.sw-version-refresh {
    background: var(--surface);
    color: var(--text-primary);
    border: 1px solid var(--border);
    min-width: 24px;
    padding: 2px 4px;
    font-size: 0.7rem;
}

.btn.sw-version-refresh:hover:not(:disabled) {
    background: var(--bg-secondary);
    border-color: var(--text-secondary);
}

.btn.sw-version-refresh:disabled {
    background: var(--text-tertiary);
    border-color: var(--text-tertiary);
    color: var(--bg-primary);
    opacity: 0.6;
}

/* Temperature and Battery Stack */
.temp-battery-stack {
    display: flex;
    flex-direction: column;
    gap: 2px;
    align-items: center;
}

.battery {
    font-size: 0.7rem;
    color: var(--text-secondary);
    text-align: center;
}

.battery.warning {
    color: var(--error);
    font-weight: 600;
}

/* Camera Power Status */
.camera-power-status {
    font-size: 0.7rem;
    color: var(--text-secondary);
    text-align: center;
    font-weight: 500;
    display: block;
    margin-bottom: 4px;
}

.camera-power-status-refresh {
    padding: 0.25rem 0.5rem;
    font-size: 0.65rem;
    line-height: 1.2;
    min-width: auto;
    display: block;
    width: 100%;
    margin-top: 2px;
}

.camera-power-status.on {
    color: var(--success);
    font-weight: 600;
}

.camera-power-status.off {
    color: var(--error);
    font-weight: 600;
}

.camera-power-status.error {
    color: var(--error);
    font-weight: 600;
}

.camera-power-status.unknown {
    color: var(--text-tertiary);
    font-style: italic;
}

/* === ERROR BOUNDARY STYLES === */
.error-boundary {
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 400px;
    padding: 2rem;
    background: var(--bg-primary);
}

.error-boundary-content {
    max-width: 600px;
    padding: 2rem;
    background: var(--surface);
    border: 1px solid var(--border);
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
    text-align: center;
}

.error-boundary-content h2 {
    color: var(--error);
    margin-bottom: 1rem;
    font-size: 1.5rem;
}

.error-message {
    color: var(--text-primary);
    margin-bottom: 1.5rem;
    line-height: 1.6;
}

.error-details {
    margin: 1.5rem 0;
    text-align: left;
}

.error-details summary {
    cursor: pointer;
    color: var(--text-secondary);
    margin-bottom: 0.5rem;
    font-weight: 500;
}

.error-details summary:hover {
    color: var(--text-primary);
}

.error-info {
    background: var(--bg-secondary);
    padding: 1rem;
    border-radius: 4px;
    margin-top: 0.5rem;
}

.error-info strong {
    display: block;
    margin: 1rem 0 0.5rem 0;
    color: var(--text-primary);
}

.error-info pre {
    background: var(--bg-primary);
    padding: 0.75rem;
    border-radius: 4px;
    overflow-x: auto;
    font-size: 0.875rem;
    line-height: 1.4;
    color: var(--text-secondary);
    white-space: pre-wrap;
    word-break: break-word;
}

.error-actions {
    display: flex;
    gap: 1rem;
    justify-content: center;
    margin: 1.5rem 0;
    flex-wrap: wrap;
}

.error-actions .btn {
    min-width: 120px;
}

.error-contact {
    margin-top: 1.5rem;
    padding-top: 1rem;
    border-top: 1px solid var(--border);
    color: var(--text-secondary);
    font-size: 0.875rem;
}

.error-contact a {
    color: var(--info);
    text-decoration: none;
}

.error-contact a:hover {
    text-decoration: underline;
}

/* 다크 모드에서 에러 바운더리 스타일 조정 */
.dark-mode .error-boundary-content {
    box-shadow: 0 4px 12px rgba(255, 255, 255, 0.1);
}

/* === LOADING SPINNER STYLES === */
.loading-spinner {
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    gap: 1rem;
}

.loading-spinner__circle {
    display: flex;
    gap: 4px;
    align-items: center;
}

.loading-spinner__bounce {
    border-radius: 50%;
    animation: loading-bounce 1.4s infinite ease-in-out both;
}

/* 크기 변형 */
.loading-spinner--small .loading-spinner__bounce {
    width: 8px;
    height: 8px;
}

.loading-spinner--medium .loading-spinner__bounce {
    width: 12px;
    height: 12px;
}

.loading-spinner--large .loading-spinner__bounce {
    width: 16px;
    height: 16px;
}

/* 색상 변형 */
.loading-spinner--default .loading-spinner__bounce {
    background-color: var(--text-secondary);
}

.loading-spinner--primary .loading-spinner__bounce {
    background-color: var(--info);
}

.loading-spinner--secondary .loading-spinner__bounce {
    background-color: var(--text-tertiary);
}

/* 애니메이션 지연 */
.loading-spinner__bounce--1 {
    animation-delay: -0.32s;
}

.loading-spinner__bounce--2 {
    animation-delay: -0.16s;
}

.loading-spinner__bounce--3 {
    animation-delay: 0s;
}

/* 로딩 메시지 */
.loading-spinner__message {
    color: var(--text-secondary);
    font-size: 0.875rem;
    text-align: center;
    margin-top: 0.5rem;
}

/* 오버레이 모드 */
.loading-overlay {
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: rgba(255, 255, 255, 0.8);
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1000;
    backdrop-filter: blur(2px);
}

.dark-mode .loading-overlay {
    background: rgba(0, 0, 0, 0.8);
}

.loading-spinner--overlay {
    position: relative;
    z-index: 1001;
}

/* 바운스 애니메이션 */
@keyframes loading-bounce {
    0%, 80%, 100% {
        transform: scale(0.6);
        opacity: 0.5;
    }
    40% {
        transform: scale(1);
        opacity: 1;
    }
}

/* 로딩 상태의 버튼들 */
.btn--loading {
    position: relative;
    pointer-events: none;
    opacity: 0.7;
}

.btn--loading::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 16px;
    height: 16px;
    margin: -8px 0 0 -8px;
    border: 2px solid transparent;
    border-top: 2px solid currentColor;
    border-radius: 50%;
    animation: button-spin 1s linear infinite;
}

@keyframes button-spin {
    to {
        transform: rotate(360deg);
    }
}
